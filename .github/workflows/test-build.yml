# build/Dockerfileを使って、イメージ densukest/xampp-devenv:latest をビルドする
# ビルド後イメージを densukest/xampp-devenv:latest としてpushする

name: イメージビルドのテスト(マルチアーキテクチャ)

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: # 手動実行

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# GHCRへのプッシュにはパーミッションが必要です
permissions:
  contents: read
  packages: write
  id-token: write

jobs:

    # actで実行しているかのチェック(一部のアクションを動かさないようにするため)
    check-act:
      runs-on: ubuntu-latest
      outputs:
        IS_ACT: ${{ steps.check-act.outputs.IS_ACT }}
      steps:
        - name: actのチェック
          id: check-act
          run: |
            R=false
            [ -n "$ACT" ] && R=true
            [ -n "$GITHUB_EVENT_NAME" ] && [ "$GITHUB_EVENT_NAME" = "pull_request" ] && R=true
            echo "IS_ACT=$R" >> $GITHUB_OUTPUT

    build-ubuntu:
        needs:
          - check-act
        strategy:
          fail-fast: true
          matrix:
            include:
              - platform: linux/amd64
                runner: ubuntu-24.04
                tag_suffix: amd64
              - platform: linux/arm64
                runner: ${{ needs.check-act.outputs.IS_ACT == 'true' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
                tag_suffix: arm64
        runs-on: ${{ matrix.runner }}
        steps:
        - name: チェックアウト
          uses: actions/checkout@v4
        - name: "buildx: QEMUのセットアップ"
          uses: docker/setup-qemu-action@v3
        - name: "docker buildの準備"
          uses: docker/setup-buildx-action@v3
        - name: "イメージのビルド"
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./build/Dockerfile
            platforms: ${{ matrix.platform }}
            # あくまでビルドのテスト用です、よってイメージのプッシュは行いません
            push: false
            load: true
            tags: ghcr.io/${{ github.repository_owner }}/xampp-devenv:testing-${{ matrix.tag_suffix }}
        - name: ビルドしたイメージのチェック
          run: |
            docker run --rm -v ${PWD}/test:/test ghcr.io/${{ github.repository_owner }}/xampp-devenv:testing-${{ matrix.tag_suffix }} sh /test/run.sh ubuntu-${{matrix.tag_suffix }}
        - name: "(act上)イメージの削除"
          if: needs.check-act.outputs.IS_ACT == 'true'
          run: |
            docker rmi ghcr.io/${{ github.repository_owner }}/xampp-devenv:testing-${{ matrix.tag_suffix }} || true
 
    build-alpine:
        needs:
          - check-act
        strategy:
          fail-fast: true
          matrix:
            include:
              - platform: linux/amd64
                runner: ubuntu-24.04
                tag_suffix: amd64
              - platform: linux/arm64
                runner: ${{ needs.check-act.outputs.IS_ACT == 'true' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
                tag_suffix: arm64
        runs-on: ${{ matrix.runner }}
        steps:
        - name: チェックアウト
          uses: actions/checkout@v4
        - name: "buildx: QEMUのセットアップ"
          uses: docker/setup-qemu-action@v3
        - name: "docker buildの準備"
          uses: docker/setup-buildx-action@v3
        - name: "イメージのビルド"
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./build/Dockerfile.alpine
            platforms: ${{ matrix.platform }}
            # あくまでビルドのテスト用です、よってイメージのプッシュは行いません
            push: false
            load: true
            tags: ghcr.io/${{ github.repository_owner }}/xampp-devenv:testing-alpine-${{ matrix.tag_suffix }}
        - name: ビルドしたイメージのチェック
          run: |
            docker run --rm -v ${PWD}/test:/test ghcr.io/${{ github.repository_owner }}/xampp-devenv:testing-alpine-${{ matrix.tag_suffix }} sh /test/run.sh alpine-${{matrix.tag_suffix }}
        - name: "(act上)イメージの削除"
          if: needs.check-act.outputs.IS_ACT == 'true'
          run: |
            docker rmi ghcr.io/${{ github.repository_owner }}/xampp-devenv:testing-alpine-${{ matrix.tag_suffix }} || true