# build/Dockerfileを使って、イメージ densukest/xampp-devenv:latest をビルドする
# ビルド後イメージを densukest/xampp-devenv:latest としてpushする

name: Docker Image CI

on:
    push:
        branches:
          - main
    workflow_dispatch: # 手動実行

# GHCRへのプッシュにはパーミッションが必要です
permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

    # actで実行しているかのチェック(一部のアクションを動かさないようにするため)
    check-act:
      runs-on: ubuntu-latest
      outputs:
        IS_ACT: ${{ steps.check-act.outputs.IS_ACT }}
      steps:
        - name: actのチェック
          id: check-act
          run: |
            R=false
            [ -n "$ACT" ] && R=true
            [ -n "$GITHUB_EVENT_NAME" ] && [ "$GITHUB_EVENT_NAME" = "pull_request" ] && R=true
            echo "IS_ACT=$R" >> $GITHUB_OUTPUT

   # シリアル値を生成するジョブ
    make-serial:
      runs-on: ubuntu-latest
      outputs:
        SERIAL_VALUE: ${{ steps.generate-serial.outputs.SERIAL_VALUE }}
      steps:
        - name: シリアル値の生成
          id: generate-serial
          # シリアル値はここではepoch秒とする
          run: echo "SERIAL_VALUE=$(date +%s)" >> $GITHUB_OUTPUT

    build:
        needs:
          - make-serial
          - check-act
        strategy:
          fail-fast: true
          matrix:
            include:
              - platform: linux/amd64
                runner: ubuntu-24.04
                tag_suffix: amd64
              - platform: linux/arm64
                runner: ${{ needs.check-act.outputs.IS_ACT == 'true' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
                tag_suffix: arm64
        runs-on: ${{ matrix.runner }}
        steps:
        - name: チェックアウト
          uses: actions/checkout@v4
        - name: "buildx: QEMUのセットアップ"
          uses: docker/setup-qemu-action@v3
        - name: "docker buildの準備"
          uses: docker/setup-buildx-action@v3
        - name: "dockerへのログイン"
          uses: docker/login-action@v3
          if: needs.check-act.outputs.IS_ACT != 'true'
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: "イメージのビルド"
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./build/Dockerfile
            platforms: ${{ matrix.platform }}
            push: true
            load: true
            tags: ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }}-${{ matrix.tag_suffix }}
        - name: "(act上)イメージの削除"
          if: needs.check-act.outputs.IS_ACT == 'true'
          run: |
            docker rmi ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }}-${{ matrix.tag_suffix }} || true
    
    # マニフェストを作成して両アーキテクチャを統合利用(actでは実行しない)
    create-manifest:
      runs-on: ubuntu-24.04
      timeout-minutes: 1
      needs:
        - build
        - check-act
        - make-serial
      if: needs.check-act.outputs.IS_ACT != 'true'
      steps:
        - name: GHCRにログイン
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: 既存のマニフェストを削除する
          run: |
            docker manifest rm ghcr.io/${{ github.repository_owner }}/xampp-devenv:latest || true
            docker manifest rm ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }} || true

        - name: マニフェストの作成(latest)
          run: |
            set -x
            docker manifest create ghcr.io/${{ github.repository_owner }}/xampp-devenv:latest \
              ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }}-amd64
            docker manifest create ghcr.io/${{ github.repository_owner }}/xampp-devenv:latest \
              --amend ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }}-arm64
        - name: マニフェストの作成(シリアル値)
          run: |
            set -x
            docker manifest create ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }} \
              --amend ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }}-amd64
            docker manifest create ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }} \
              --amend ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }}-arm64
        - name: マニフェストのプッシュ
          run: |
            docker manifest push ghcr.io/${{ github.repository_owner }}/xampp-devenv:latest
            docker manifest push ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }}

    # act環境の際、残ってるイメージデータなどを削除しておく
    cleanup:
      runs-on: ubuntu-24.04
      needs:
        - build
        - create-manifest
      if: needs.check-act.outputs.IS_ACT == 'true'
      steps:
        - name: act環境のイメージ削除
          run: |
            docker rmi ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }}-amd64 || true
            docker rmi ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }}-arm64 || true
            docker rmi ghcr.io/${{ github.repository_owner }}/xampp-devenv:latest || true
            docker rmi ghcr.io/${{ github.repository_owner }}/xampp-devenv:${{ needs.make-serial.outputs.SERIAL_VALUE }} || true
            docker image prune -f