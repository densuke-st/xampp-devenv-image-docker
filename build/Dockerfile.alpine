ARG PYTHON_VERSION=3.13.5
ARG ALPINE_VERSION=3.22
ARG PHP_VERSION=8.3

# uvのalpineイメージは3.21までしかないのでここはしかたない(3.21ベースのものから借用)
FROM ghcr.io/astral-sh/uv:alpine3.21 AS uv-source

# pythonはイメージから借用
FROM python:${PYTHON_VERSION}-alpine${ALPINE_VERSION} AS python-source


FROM php:${PHP_VERSION}-alpine${ALPINE_VERSION} AS php-exts

WORKDIR /usr/local
RUN <<EOM
    set -e
    export MAKEFLAGS="-j$(($(nproc) * 2 + 1))"
    # PHP_VERSIONからphpXX-devパッケージの名称を作成(例: 8.3 -> php83-dev)
    PHP_DEV_PKG="php$(echo $PHP_VERSION | awk -F. '{print $1$2}')-dev"
    echo "PHP_DEV_PKG=${PHP_DEV_PKG}"
    apk add --no-cache --virtual .build-deps libzip-dev clang clang-dev llvm mold ${PHP_DEV_PKG} linux-headers make
    touch /tmp/now
    touch /tmp/basefile
    export CC=clang
    export CXX=clang++
    export LDFLAGS="-fuse-ld=mold"
    docker-php-ext-install mysqli pdo_mysql zip
    pecl install xdebug
    find /usr/local -newer /tmp/now -type f > /tmp/files
    tar cvzf /tmp/exts.tar.gz $(cat /tmp/files)
    rm -f /tmp/now /tmp/basefile /tmp/files
    apk del .build-deps
EOM

FROM php:${PHP_VERSION}-alpine${ALPINE_VERSION}
ARG USER_NAME=vscode
ARG USER_UID=1000
ARG USER_GID=1000

ARG PYTHON_VERSION


COPY --from=python-source /usr/local /usr/local
COPY --from=uv-source /usr/local/bin/uv /usr/local/bin/uvx /opt/uv/
COPY --from=php-exts /tmp/exts.tar.gz /tmp/

ENV PATH=/opt/uv:$PATH

RUN tar xvzf /tmp/exts.tar.gz -C / && \
    rm -f /tmp/exts.tar.gz && \
    cd /usr/local/etc/php && \
    ln -sf php.ini-development php.ini && \
    echo "date.timezone = Asia/Tokyo" >> php.ini
COPY ./build/pecl-xdebug.ini /usr/local/etc/php/conf.d/

RUN apk add --no-cache tzdata && \
    cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime && \
    apk del tzdata && \
    echo "Asia/Tokyo" > /etc/timezone && \
    apk add --no-cache musl-locales

# sudo
RUN apk add --no-cache sudo && \
    sed -i -e 's/^%sudo.*/%sudo ALL=(ALL) NOPASSWD:ALL/' /etc/sudoers && \
    sed -i -e 's/^root:/root:x:0:0:root:\/root:\/bin\/ash/' /etc/passwd

RUN <<EOM
set -e
addgroup -g ${USER_GID} ${USER_NAME}
adduser -D -u ${USER_UID} -G ${USER_NAME} ${USER_NAME}
# sudoにエントリを追加
echo "${USER_NAME} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
EOM

RUN <<EOM
# Pythonのdynloadで構成されたライブラリで、必要なものを抽出してインストールする
LIST=$(mktemp)
cd /usr/local/lib/python${PYTHON_VERSION%.*}/lib-dynload
for so in *.so; do
    ldd $so 2>&1 | grep '^Error loading shared library' | awk '{print $5}' |
    cut -d: -f1 | sed -e 's/^/so:/'
done >> "${LIST}"
# LISTで追加で必要なライブラリがあれば、インストールする(ファイルサイズが空か否かで判断)
if [ -s "${LIST}" ]; then
    apk add --no-cache $(cat "${LIST}")
fi
apk add --no-cache git xz libzip 
rm -f "${LIST}"
EOM


ENV LC_ALL=ja_JP.UTF-8
ENV LANG=ja_JP.UTF-8

USER ${USER_NAME}
ENV HOME=/home/${USER_NAME}
ENV PATH=$HOME/.local/bin:$PATH
WORKDIR ${HOME}

CMD ["php", "-S", "0.0.0.0:80", "-t", "/var/www/html"]
